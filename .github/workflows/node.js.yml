# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: CICD Test

on:
  push:
    branches: [ "develop", "main" ]
  # pull_request:
  #   branches: [ "main" ]

env:
  AWS_REGION: ap-northeast-2
  S3_BUCKET_NAME: 4tar1p

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CI: false  # true시 warning까지 에러로 출력

    # Nodejs 런타임 정보 설정  
    strategy:
      matrix:
        node-version: [18.x, 20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - name: 1. Checkout source code.   # Repo checkout
        uses: actions/checkout@v2
      
      - name: 2. Check Node v            # Node v 확인
        run: node -v

      - name: 3. Install     
        run: yarn install

      - name: 3-1. 캐시 지우기
        run: |
          yarn cache clean
          rm -rf node_modules
          rm -rf build
          rm -rf package-lock.json
          rm -rf yarn.lock

      - name: Install Dependencies
        run: yarn
  
      - name: Build
        run: yarn build

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy to S3
        run: aws s3 sync build/ s3://${{ env.S3_BUCKET_NAME }} --delete

      - name: Invalidate CloudFront Cache
        run: aws cloudfront create-invalidation \
          --distribution-id ${{ secrets.AWS_CLOUDFRONT_ID }} --paths "/*"

